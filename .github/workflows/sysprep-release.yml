name: Manual Build & Release Sysprep Preperator

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore NuGet packages
        run: nuget restore SysprepPreperator.sln

      - name: Build Solution
        run: msbuild SysprepPreperator.sln /t:Build /p:Configuration=Release

      - name: Get latest tag
        id: get_tag
        shell: pwsh
        run: |
          $latestTag = (git describe --tags --abbrev=0) 2>$null
          if (-not $latestTag) { $latestTag = "v0.1" }
          echo "latest_tag=$latestTag" >> $env:GITHUB_ENV

      - name: Calculate next version
        id: version
        shell: pwsh
        run: |
          $ver = $env:latest_tag.TrimStart("v")
          $parts = $ver.Split('.')
          $major = [int]$parts[0]
          $minor = [int]$parts[1] + 1
          $newVersion = "$major.$minor"
          echo "version=$newVersion" >> $env:GITHUB_ENV
          Write-Host "Next version: v$newVersion"

      - name: Generate Release Notes
        id: notes
        shell: pwsh
        run: |
          # Get all commits since the last release
          $commits = git log $env:latest_tag..HEAD --pretty=format:"* %s (%h)"
          if (-not $commits) {
            $commits = "No changes since last release."
          }
          echo "notes=$commits" >> $env:GITHUB_ENV

      - name: Rename EXE
        shell: pwsh
        run: |
          $exe = Get-ChildItem -Path . -Recurse -Filter "Sysprep Preperator.exe" | Where-Object { $_.FullName -match "bin\\Release" } | Select-Object -First 1
          if ($exe) {
            $newExe = "$($exe.DirectoryName)\\Sysprep_Preperator_v${env:version}.exe"
            Rename-Item $exe.FullName $newExe -Force
            echo "EXE_PATH=$newExe" >> $env:GITHUB_ENV
          } else {
            Write-Error "Could not find Sysprep Preperator.exe in bin\\Release"
          }

      - name: Upload EXE Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Sysprep_Preperator_v${{ env.version }}
          path: ${{ env.EXE_PATH }}
          if-no-files-found: error

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.version }}
          name: "Sysprep Preperator v${{ env.version }}"
          body: ${{ env.notes }}
          files: ${{ env.EXE_PATH }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
